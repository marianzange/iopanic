<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on iopanic</title>
    <link>https://marianzange.github.io/iopanic/posts/</link>
    <description>Recent content in Posts on iopanic</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 13 Jan 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://marianzange.github.io/iopanic/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Goodbye ezeep!</title>
      <link>https://marianzange.github.io/iopanic/posts/goodbye_ezeep/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://marianzange.github.io/iopanic/posts/goodbye_ezeep/</guid>
      <description>&lt;p&gt;For all of you who haven’t noticed yet, I’ve left ezeep at the end of December. As a co-founder it’s been a tough decision to leave, after joining forces with my two amazing co-founders nearly three years ago. Looking back, building ezeep was an incredible and fun challenge.&lt;/p&gt;

&lt;p&gt;However, I started to feel that the direction ezeep is moving into and my own passions were drifting apart and that someone else would be able to fulfill the changed requirements much better than me. So back in summer (Northern hemisphere) I internally announced that I’d leave the company by the end of the year.&lt;/p&gt;

&lt;p&gt;I’m writing this post from Wellington, New Zealand. I’ve moved to this wonderful country (at least for some time) to prepare for new challenges and opportunities ahead. I’ll post more about my upcoming plans and projects at the end of summer (Southern hemisphere).&lt;/p&gt;

&lt;p&gt;For now it’s time to say goodbye and thank you to ‘team ezeep’ and everyone who’s been involved along the way. I’m very proud of what we’ve been able to achieve together.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nsync - A command-line tool for NSA’s backup services</title>
      <link>https://marianzange.github.io/iopanic/posts/nsync/</link>
      <pubDate>Sat, 24 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://marianzange.github.io/iopanic/posts/nsync/</guid>
      <description>&lt;p&gt;NSA is running the largest and most secure free backup service ever built. Still I couldn’t find any proper command-line backup tool to quickly compress and send my files to their service. So I’ve decided to introduce nsync:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nsync is an easy to use bash command-line tool to backup your files to NSA’s fully secure and free backup servers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a very early version of nsync. Due to the robustness of NSA’s data collection and storage systems it should be very reliable though. I hope you find this little tool as useful as I do. Contributions are very welcome.&lt;/p&gt;

&lt;p&gt;More information and download via GitHub:
&lt;a href=&#34;https://github.com/marianzange/nsync&#34;&gt;https://github.com/marianzange/nsync&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;—-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=6268839&#34;&gt;Discuss on HackerNews&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How XEROX Invented (and Killed) Printing</title>
      <link>https://marianzange.github.io/iopanic/posts/xerox_printing/</link>
      <pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://marianzange.github.io/iopanic/posts/xerox_printing/</guid>
      <description>

&lt;h1 id=&#34;losing-the-hackers:31950e35ecd470d63500f1ec324d548b&#34;&gt;Losing The Hackers&lt;/h1&gt;

&lt;p&gt;In the late 1970’s, Richard Stallman and his colleagues at the MIT Artificial Intelligence Lab were using one of the
first XEROX Xerographic printers. The device was provided to the lab for free. Compared to current standards,
the printer was extremely slow and constantly jammed. Additionally, print job transmission and caching were nowhere
near to what it is today. Getting tired of the unreliability, Stallman decided to modify the printer’s software to
send out a message to the person who tried to print whenever an error occurred, asking to fix the printer.
This turned out to be a simple but effective method to reduce the number of issues and let everyone work more efficiently.&lt;/p&gt;

&lt;p&gt;A few years later, Stallman and his colleagues received a new printer from XEROX. The device turned out to be much
faster and much more reliable than the old one. It just came with one tiny flaw: The software for that printer only
came in binary form and the source code was held under non-disclosure by XEROX. Now the AI Lab folks weren’t able
to adapt the software to their needs. This is considered as Stallman’s key experience that made him believe that
software should be freely available and open for everyone to modify.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While corporations dominate society and write the laws, each advance in technology is an opening for them to further
restrict its users. -– Stallman’s Law&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;XEROX is only an example for the whole industry. Look at HP, Samsung etc. and you’ll see the same behavior all over
the place. You can read the whole story about Richard Stallman’s eye opening printer experience here:
&lt;a href=&#34;http://oreilly.com/openbook/freedom/ch01.html&#34;&gt;http://oreilly.com/openbook/freedom/ch01.html&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;an-innovation-free-zone:31950e35ecd470d63500f1ec324d548b&#34;&gt;An Innovation-Free Zone&lt;/h1&gt;

&lt;p&gt;Stallman wrote his little paper jam notifier 30 years ago. Even today, printer status information for most devices is
still notoriously unreliable. There hasn’t been a lot of innovation in printing since the early days. Because of its
‘cash-cow’ status, all major device manufacturers have kept most of their software and hardware designs behind closed
doors. So they can continue selling overpriced parts, consumables and services in a locked-in, proprietary world.
After some back and forth even Microsoft started supporting people hacking their Kinect controller. In printing
(besides CUPS) pretty much nothing has been made publicly available.&lt;/p&gt;

&lt;p&gt;After all, printing is still occupying a very large space in technology and sadly takes the bottom spot in innovation.
Printing is a tool for exchanging, archiving, annotating and sharing information between people. External innovations
like e-books or tablets solve parts of the same problem. Each of those deal with a particular issue, but don’t address
the same wide scope printing does. Interestingly, there’s barely any innovation coming out of the printing space itself.&lt;/p&gt;

&lt;h1 id=&#34;breaking-the-rules:31950e35ecd470d63500f1ec324d548b&#34;&gt;Breaking the Rules&lt;/h1&gt;

&lt;p&gt;At ezeep, we’re dealing with all the proprietary parts of printing every day and are in a constant battle to build an
abstraction layer on top of those closed legacy systems. This turned out to be an incredibly hard challenge and made
us think a lot about how we could contribute to improve the situation for everyone and start uncluttering the
printing/printers industry.&lt;/p&gt;

&lt;p&gt;We believe that open source, transparency and the free flow of information is the right way to spark and catalyze
innovation. During the next few months we will start contributing first bits and pieces of code we’ve written and
knowledge we’ve acquired to the community in the hope of kicking-off a new and open era of printing. But we can’t
achieve this alone. We’ll need your support to turn the most closed and innovation-unfriendly technology into
something open that actually improves people’s life and work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>You’re Shaped By Algorithms</title>
      <link>https://marianzange.github.io/iopanic/posts/shaped_by_algorithms/</link>
      <pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://marianzange.github.io/iopanic/posts/shaped_by_algorithms/</guid>
      <description>

&lt;h1 id=&#34;gaining-certainty-through-abstraction:f532d64bf099fee510d5d95af99bf4f3&#34;&gt;Gaining Certainty Through Abstraction&lt;/h1&gt;

&lt;p&gt;Technology has always shaped how we interact with the world and the people around us. Let’s start off with a very simple example: When the first bridges were built, the engineering part was a great achievement, but the idea of building a bridge is less about solving engineering problems just for the sake of solving them. Building a bridge is in it’s very essential core about connecting people. A bridge gives people a safe way to the other side of an obstacle like a water stream or a dangerous canyon.&lt;/p&gt;

&lt;p&gt;This means it ultimately removes a big part of uncertainty from the process of crossing the obstacle and adds a layer of predictability. Now you can predict under high certainty that you’ll reach the other side and how long it’s gonna take. But why can we suddenly predict things under higher certainty? When you look at it, the bridge removes complexity from the contextual situation you’re facing when crossing that stream. Before you had to think about currents, water depths, sea monsters, winds and perhaps about choosing the right boat (a boat is already a simplification).&lt;/p&gt;

&lt;p&gt;All these different dimensions of uncertainty are still there after building the bridge but you don’t have to face them anymore. The bridge acts as an abstraction layer between you and a more or less significant fragment of the world around you. The engineers who have built the bridge, reduced your uncertainty regarding a set of challenges by not removing the uncertainty from the challenges themselves, but by building an abstraction layer between you and the original challenge.&lt;/p&gt;

&lt;h1 id=&#34;predictions-alter-reality-your-reality:f532d64bf099fee510d5d95af99bf4f3&#34;&gt;Predictions Alter Reality - Your Reality&lt;/h1&gt;

&lt;p&gt;When you keep extending my little thought experiment, you’ll probably notice that we’re living in a world of extremely high abstraction. Last weekend I traveled to Copenhagen for a little bit more than 24 hours. The biggest challenge I had to face was my quickly draining smartphone battery. So I’m in another country and all I think about is my phone battery. That’s sad, but everything else ended up being highly predictable though the lens of technology.&lt;/p&gt;

&lt;p&gt;I’m quite a heavy Foursquare user and use it to find interesting places, especially when I’m in a new city. Foursquare’s recommender selects the right cafe’s for me, makes sure I don’t run into a bad experience by filtering out bad restaurants and links me up to Google Maps which directs me to all those places. Technology in this example is abstracting between me and the dangers of having a bad meal or ending up in a bad neighborhood (however you define bad).&lt;/p&gt;

&lt;p&gt;So Foursquare and a bridge are not that different. They both abstract to a challenge and remove uncertainty in the process of reaching your goal. The primary difference between a bridge and Foursquare is that most bridge’s don’t adapt to you based on your behavior. Modern machine learning systems instead often sport already quite sophisticated algorithms and pour your behavior into relatively well working models. Questionable here is, that these models are usually proprietary and designed with a certain goal in mind, that very likely doesn’t match your personal goal for that specific context.&lt;/p&gt;

&lt;p&gt;I’m most certainly the last person who would start a movement against AI and advanced algorithm development because I believe in the basic principle of removing uncertainty and improving life through science and engineering. But still I want to raise awareness that the most powerful tools that directly shape how we act in real-life are proprietary black-boxes. This poses a great danger to society and every individual because predictions alter reality. Once Google or Foursquare tells you, that you most likely won’t enjoy a place, even if you end up going there, you will be prejudiced and act and experience in a different way.&lt;/p&gt;

&lt;p&gt;It’s convenient to live in a highly abstracted world. Just keep in mind, that the more abstraction layers you add, the more you loose touch with the underlying problems. In life this means a black-boxed set of algorithms is channeling you through life. In engineering this means you’ll end up solving abstractions of abstractions while forgetting to address the actual problem.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Me. Commiting Code.</title>
      <link>https://marianzange.github.io/iopanic/posts/commiting_code/</link>
      <pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://marianzange.github.io/iopanic/posts/commiting_code/</guid>
      <description>&lt;p&gt;Cool, isn’t it? I stole the idea from Victor Martinez (&lt;a href=&#34;http://coderwall.com/p/xlatfq&#34;&gt;http://coderwall.com/p/xlatfq&lt;/a&gt;) who fully deserves the credit for me annoying the web with this video.&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/u19_4GF0v5Q&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
  </channel>
</rss>